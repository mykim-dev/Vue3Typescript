.ev-screen {
  .ev-screen-row {
    row-gap: var(--evc-layout-padding);
    max-height: calc(var(--evc-main-height));
    overflow: auto;

    .ev-screen-col {
      position: relative;

      &::after {
        display: none;
        content: "";
        width: var(--evc-layout-item-padding);
        height: 30%;
        min-height: 100px;
        max-height: 30vh;
        border-radius: 15px calc(var(--evc-component-border-radius) * -1) 0 15px;
        position: absolute;
        top: 0;
        left: var(--evc-layout-item-padding);
        background: var(--evc-component-background-image);
      }

      // .is-folder
      &:has(.is-folder) {
        padding-left: calc(var(--evc-layout-item-padding) * 2) !important;

        &::after {
          display: block;
        }
      }
    }

    // is-full 일때
    &.is-full {
      display: grid;
      grid-template-columns: repeat(24, 1fr);
      grid-template-rows: repeat(24, 1fr);
      gap: var(--evc-layout-padding);
      grid-auto-flow: row dense;
      height: var(--evc-main-height);
      margin: initial !important;
      overflow: initial;

      [class*='ev-screen-col'] {
        max-width: initial;
        height: 100%;
        padding: initial !important;
        overflow: auto;

        &:has(.is-folder) {
          padding-left: calc(var(--evc-layout-item-padding) * 2) !important;
          margin-left: calc(var(--evc-layout-item-padding) * -1);
        }
      }

      .ev-component {
        height: 100%;
      }

      &.default {
        .ev-screen-col {
          grid-area: span 24 / span 24;
        }
      }

      &.horizontal {
        .ev-screen-col {
          grid-area: span 24 / span 12;
        }
      }

      &.horizontal2 {
        .ev-screen-col {
          &:nth-of-type(1) {
            grid-area: span 24 / span 12;
          }

          &:nth-of-type(2),
          &:nth-of-type(3) {
            grid-area: span 12 / span 12;
          }
        }
      }

      &.horizontal3 {
        .ev-screen-col:nth-of-type(1) {
          grid-area: span 24 / span 6;
        }

        .ev-screen-col:nth-last-of-type(1) {
          grid-area: span 24 / span 18;
        }
      }

      &.vertical {
        .ev-screen-col {
          grid-area: span 12 / span 24;
        }
      }

      &.vertical2 {
        .ev-screen-col {
          &:nth-of-type(1) {
            grid-area: span 12 / span 24;
          }

          &:nth-of-type(2),
          &:nth-of-type(3) {
            grid-area: span 12 / span 12;
          }
        }
      }

      &.dashboard {
        .ev-screen-col {
          &:nth-child(n + 1):nth-child(-n + 3) {
            grid-area: span 4 / span 8;
          }

          &:nth-child(4) {
            grid-area: span 8 / span 12;
          }

          &:nth-child(n + 5):nth-child(-n + 8) {
            grid-area: span 4 / span 6;
          }

          &:nth-child(n + 9):nth-child(-n + 14) {
            grid-area: span 4 / span 12;
          }
        }
      }

      &.dashboard1 {
        .ev-screen-col {

          &:nth-child(n + 1),
          &:nth-child(n + 2),
          &:nth-child(n + 4),
          &:nth-child(n + 5) {
            grid-area: span 6 / span 8;
          }

          &:nth-child(3) {
            grid-area: span 12 / span 8;
          }

          &:nth-child(n + 6):nth-child(-n + 9) {
            grid-area: span 12 / span 12;
          }
        }
      }

      &.dashboard2 {
        grid-template-columns: repeat(20, 1fr);

        .ev-screen-col {
          &:nth-child(n + 1):nth-child(-n + 5) {
            grid-area: span 6 / span 4;
          }

          &:nth-child(n + 6):nth-child(-n + 11) {
            grid-area: span 12 / span 10;
          }
        }
      }

      &.dashboard3 {
        grid-template-rows: repeat(20, 1fr);

        .ev-screen-col {
          &:nth-child(n + 1):nth-child(-n + 6) {
            grid-area: span 5 / span 8;
          }

          &:nth-child(n + 7):nth-child(-n + 10) {
            grid-area: span 5 / span 12;
          }
        }
      }
    }
  }
}